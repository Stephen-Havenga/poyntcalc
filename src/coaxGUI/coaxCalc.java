/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package coaxGUI;

import java.awt.HeadlessException ;
import java.io.File ;
import java.io.FileReader ;
import java.io.FileNotFoundException ;
import java.util.Scanner ;
        
public class coaxCalc extends javax.swing.JFrame {

    /**
     * Creates new form coaxCalc
     */
    
    
    
    
    
    private static Scanner x ;
    public coaxCalc() {
        initComponents();
        String cableName ;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        coaxDataPanel = new javax.swing.JPanel();
        dropdownBox = new javax.swing.JComboBox<>();
        manTxt = new javax.swing.JTextField();
        inCondRadTxt = new javax.swing.JTextField();
        oneTimeBendRadTxt = new javax.swing.JTextField();
        manuLbl = new javax.swing.JLabel();
        inCondRadLbl = new javax.swing.JLabel();
        oTBendRadLbl = new javax.swing.JLabel();
        mmLbl3 = new javax.swing.JLabel();
        mmLbl4 = new javax.swing.JLabel();
        outJackRadLbl = new javax.swing.JLabel();
        outJackRadTxt = new javax.swing.JTextField();
        mmLbl2 = new javax.swing.JLabel();
        modelNumLbl = new javax.swing.JLabel();
        modNumTxt = new javax.swing.JTextField();
        dielectricLbl = new javax.swing.JLabel();
        dielectricTxt = new javax.swing.JTextField();
        shieldOC1Lbl = new javax.swing.JLabel();
        shieldOC1Txt = new javax.swing.JTextField();
        shieldOC2Lbl = new javax.swing.JLabel();
        shieldOC2Txt = new javax.swing.JTextField();
        jacketToleranceLbl = new javax.swing.JLabel();
        jackTolerTxt = new javax.swing.JTextField();
        rptdBendRadLbl = new javax.swing.JLabel();
        installBendRadLbl = new javax.swing.JLabel();
        statBendRadLbl = new javax.swing.JLabel();
        dynBendRadLbl = new javax.swing.JLabel();
        minFreqLbl = new javax.swing.JLabel();
        maxFreqLbl = new javax.swing.JLabel();
        rptdBendRadTxt = new javax.swing.JTextField();
        installBendRadTxt = new javax.swing.JTextField();
        statBendRadTxt = new javax.swing.JTextField();
        dynBendRadTxt = new javax.swing.JTextField();
        minFreqTxt = new javax.swing.JTextField();
        maxFreqTxt = new javax.swing.JTextField();
        mmLbl5 = new javax.swing.JLabel();
        mmLbl6 = new javax.swing.JLabel();
        mmLbl9 = new javax.swing.JLabel();
        mmLbl10 = new javax.swing.JLabel();
        mmLbl7 = new javax.swing.JLabel();
        mmLbl8 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        coaxCalcPanel = new javax.swing.JPanel();
        frequencySlider = new javax.swing.JSlider();
        exitButton = new javax.swing.JButton();
        frequencySelectedTxt = new javax.swing.JTextField();
        cableSelectedTxt = new javax.swing.JTextField();
        inputLengthTxt = new javax.swing.JTextField();
        lengthInputLbl = new javax.swing.JLabel();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel11.setText("jLabel11");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Coax Cable Specifications and Calculator");

        coaxDataPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Coax Cable Specifications", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 14), new java.awt.Color(0, 0, 255))); // NOI18N

        dropdownBox.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        dropdownBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "RG_174", "RG_174_U", "Enviroflex_316_D", "LEONI_Dacar_302", "LMR_195_FR", "HDF_195", "LMR_200", "LMR_400", "RG_316", "RG_58", "H_155A00" }));
        dropdownBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropdownBoxActionPerformed(evt);
            }
        });

        manTxt.setEditable(false);
        manTxt.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        inCondRadTxt.setEditable(false);
        inCondRadTxt.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        oneTimeBendRadTxt.setEditable(false);
        oneTimeBendRadTxt.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        manuLbl.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        manuLbl.setText("Manufacturer:");

        inCondRadLbl.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        inCondRadLbl.setText("Inner Conductor Radius:");

        oTBendRadLbl.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        oTBendRadLbl.setText("One Time Bend Radius:");

        mmLbl3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        mmLbl3.setText("mm");

        mmLbl4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        mmLbl4.setText("mm");

        outJackRadLbl.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        outJackRadLbl.setText("Outer Jacket Radius:");

        outJackRadTxt.setEditable(false);
        outJackRadTxt.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        mmLbl2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        mmLbl2.setText("mm");

        modelNumLbl.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        modelNumLbl.setText("Model Number");

        modNumTxt.setEditable(false);
        modNumTxt.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        dielectricLbl.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        dielectricLbl.setText("Dielectric:");

        dielectricTxt.setEditable(false);
        dielectricTxt.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        shieldOC1Lbl.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        shieldOC1Lbl.setText("Shield OC1:");

        shieldOC1Txt.setEditable(false);
        shieldOC1Txt.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        shieldOC2Lbl.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        shieldOC2Lbl.setText("Shield OC2:");

        shieldOC2Txt.setEditable(false);
        shieldOC2Txt.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jacketToleranceLbl.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jacketToleranceLbl.setText("Jacket Tolerance:");

        jackTolerTxt.setEditable(false);
        jackTolerTxt.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        rptdBendRadLbl.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        rptdBendRadLbl.setText("Repeated Bend Radius:");

        installBendRadLbl.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        installBendRadLbl.setText("Installation Bend Radius:");

        statBendRadLbl.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        statBendRadLbl.setText("Static Bend Radius:");

        dynBendRadLbl.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        dynBendRadLbl.setText("Dynamic Bend Radius:");

        minFreqLbl.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        minFreqLbl.setText("Minimum Frequency:");

        maxFreqLbl.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        maxFreqLbl.setText("Maximum Frequency:");

        rptdBendRadTxt.setEditable(false);
        rptdBendRadTxt.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        installBendRadTxt.setEditable(false);
        installBendRadTxt.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        statBendRadTxt.setEditable(false);
        statBendRadTxt.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        dynBendRadTxt.setEditable(false);
        dynBendRadTxt.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        minFreqTxt.setEditable(false);
        minFreqTxt.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        maxFreqTxt.setEditable(false);
        maxFreqTxt.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        mmLbl5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        mmLbl5.setText("mm");

        mmLbl6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        mmLbl6.setText("mm");

        mmLbl9.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        mmLbl9.setText("mm");

        mmLbl10.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        mmLbl10.setText("mm");

        mmLbl7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        mmLbl7.setText("mm");

        mmLbl8.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        mmLbl8.setText("mm");

        jTextField1.setEditable(false);
        jTextField1.setForeground(new java.awt.Color(240, 240, 240));
        jTextField1.setBorder(null);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout coaxDataPanelLayout = new javax.swing.GroupLayout(coaxDataPanel);
        coaxDataPanel.setLayout(coaxDataPanelLayout);
        coaxDataPanelLayout.setHorizontalGroup(
            coaxDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(coaxDataPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(coaxDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dropdownBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(coaxDataPanelLayout.createSequentialGroup()
                        .addGroup(coaxDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(coaxDataPanelLayout.createSequentialGroup()
                                .addGroup(coaxDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(coaxDataPanelLayout.createSequentialGroup()
                                        .addComponent(dielectricLbl)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(dielectricTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(coaxDataPanelLayout.createSequentialGroup()
                                        .addComponent(installBendRadLbl)
                                        .addGap(18, 18, 18)
                                        .addComponent(installBendRadTxt))
                                    .addGroup(coaxDataPanelLayout.createSequentialGroup()
                                        .addGroup(coaxDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(manuLbl)
                                            .addComponent(outJackRadLbl)
                                            .addGroup(coaxDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(inCondRadLbl, javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(oTBendRadLbl))
                                            .addComponent(rptdBendRadLbl))
                                        .addGap(18, 18, 18)
                                        .addGroup(coaxDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(inCondRadTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                                            .addComponent(oneTimeBendRadTxt)
                                            .addComponent(outJackRadTxt)
                                            .addComponent(rptdBendRadTxt)
                                            .addComponent(manTxt))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(coaxDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(mmLbl3)
                                    .addComponent(mmLbl4)
                                    .addComponent(mmLbl2)
                                    .addComponent(mmLbl5)
                                    .addComponent(mmLbl6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, coaxDataPanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(modelNumLbl)
                                .addGap(55, 55, 55)))
                        .addGroup(coaxDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(statBendRadLbl)
                            .addComponent(shieldOC2Lbl)
                            .addComponent(shieldOC1Lbl)
                            .addComponent(dynBendRadLbl)
                            .addComponent(jacketToleranceLbl)
                            .addGroup(coaxDataPanelLayout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addGroup(coaxDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(maxFreqLbl)
                                    .addComponent(minFreqLbl)))
                            .addComponent(modNumTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(49, 49, 49)
                        .addGroup(coaxDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(shieldOC1Txt)
                            .addComponent(shieldOC2Txt)
                            .addComponent(jackTolerTxt)
                            .addComponent(statBendRadTxt)
                            .addComponent(dynBendRadTxt)
                            .addComponent(minFreqTxt)
                            .addComponent(maxFreqTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(coaxDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(coaxDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(mmLbl9)
                        .addComponent(mmLbl10)
                        .addComponent(mmLbl7, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(mmLbl8, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(coaxDataPanelLayout.createSequentialGroup()
                .addGap(342, 342, 342)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        coaxDataPanelLayout.setVerticalGroup(
            coaxDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(coaxDataPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dropdownBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addGroup(coaxDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(modNumTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(modelNumLbl))
                .addGap(37, 37, 37)
                .addGroup(coaxDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(coaxDataPanelLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(coaxDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(coaxDataPanelLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(manuLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE))
                            .addComponent(manTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35))
                    .addGroup(coaxDataPanelLayout.createSequentialGroup()
                        .addGroup(coaxDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(shieldOC1Txt)
                            .addGroup(coaxDataPanelLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(coaxDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(shieldOC1Lbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(mmLbl7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(coaxDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(shieldOC2Txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dielectricTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(coaxDataPanelLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(coaxDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(mmLbl8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(shieldOC2Lbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(dielectricLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addGroup(coaxDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(coaxDataPanelLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(coaxDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(outJackRadLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(outJackRadTxt)))
                    .addGroup(coaxDataPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(mmLbl2, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE))
                    .addGroup(coaxDataPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(coaxDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jacketToleranceLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jackTolerTxt))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(coaxDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(coaxDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(inCondRadTxt)
                        .addComponent(statBendRadTxt))
                    .addGroup(coaxDataPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(coaxDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(inCondRadLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                            .addComponent(mmLbl3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(statBendRadLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(mmLbl9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(coaxDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(coaxDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(oneTimeBendRadTxt)
                        .addComponent(dynBendRadTxt))
                    .addGroup(coaxDataPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(coaxDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(oTBendRadLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                            .addComponent(mmLbl4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dynBendRadLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(mmLbl10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(18, 18, 18)
                .addGroup(coaxDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(coaxDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rptdBendRadTxt)
                        .addComponent(minFreqTxt))
                    .addGroup(coaxDataPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(coaxDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rptdBendRadLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                            .addComponent(minFreqLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(mmLbl5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(18, 18, 18)
                .addGroup(coaxDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(coaxDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(installBendRadTxt)
                        .addComponent(maxFreqTxt))
                    .addGroup(coaxDataPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(coaxDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(installBendRadLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                            .addComponent(maxFreqLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(mmLbl6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        coaxCalcPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Coax Loss Calculator", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 14), new java.awt.Color(0, 0, 204))); // NOI18N

        frequencySlider.setFont(new java.awt.Font("Times New Roman", 0, 8)); // NOI18N
        frequencySlider.setMajorTickSpacing(1000);
        frequencySlider.setMaximum(8000);
        frequencySlider.setMinorTickSpacing(100);
        frequencySlider.setPaintLabels(true);
        frequencySlider.setPaintTicks(true);
        frequencySlider.setSnapToTicks(true);
        frequencySlider.setToolTipText("");
        frequencySlider.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Frequency Select", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 14))); // NOI18N
        frequencySlider.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        frequencySlider.setName(""); // NOI18N
        frequencySlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                frequencySliderStateChanged(evt);
            }
        });

        javax.swing.GroupLayout coaxCalcPanelLayout = new javax.swing.GroupLayout(coaxCalcPanel);
        coaxCalcPanel.setLayout(coaxCalcPanelLayout);
        coaxCalcPanelLayout.setHorizontalGroup(
            coaxCalcPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(coaxCalcPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(frequencySlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        coaxCalcPanelLayout.setVerticalGroup(
            coaxCalcPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(coaxCalcPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(frequencySlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        frequencySelectedTxt.setBackground(new java.awt.Color(240, 240, 240));
        frequencySelectedTxt.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        cableSelectedTxt.setBackground(new java.awt.Color(240, 240, 240));
        cableSelectedTxt.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cableSelectedTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cableSelectedTxtActionPerformed(evt);
            }
        });

        inputLengthTxt.setBackground(new java.awt.Color(240, 240, 240));
        inputLengthTxt.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        inputLengthTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputLengthTxtActionPerformed(evt);
            }
        });

        lengthInputLbl.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lengthInputLbl.setText("Input Cable Length");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(coaxCalcPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(coaxDataPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(frequencySelectedTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cableSelectedTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(87, 87, 87)
                .addComponent(lengthInputLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(inputLengthTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(exitButton)
                .addGap(23, 23, 23))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(coaxDataPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(coaxCalcPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(frequencySelectedTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cableSelectedTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lengthInputLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(inputLengthTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exitButton))
                .addContainerGap(102, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void dropdownBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropdownBoxActionPerformed
        // TODO add your handling code here:
        String filepath = "C:\\Users\\Vernon Shaw\\Desktop\\AppInformation.txt" ;
        String searchTerm = dropdownBox.getSelectedItem().toString() ;
        
        boolean found = false ;
        String cable = "" ;
        String dielectric = "" ;
        String shieldOC1 = "" ;
        String shieldOC2 = "" ;
        String jacket = "" ;
        String jacketTolerance = "" ;
        String oneTimeBendRad = "" ;
        String rptdBendRad = "" ;
        String installBendRad = "" ;
        String statBendRad = "" ;
        String dynBendRad = "" ;
        String minFreq = "" ;
        String maxFreq = "" ;
        String manufacturer = "" ;
        //String outerRadius="" ;
        String inCondRad="" ;
        String bendRadius="" ;
        int counter = 0 ;
        
        try{
            x = new Scanner(new FileReader(filepath)) ;
            x.useDelimiter("[,\n]") ;
            
            while(x.hasNext() && found == false){
                cable = x.next();
                manufacturer = x.next() ;
                inCondRad = x.next() ;
                dielectric = x.next() ;
                shieldOC1 = x.next() ;
                shieldOC2 = x.next() ;
                jacket = x.next() ;
                jacketTolerance = x.next() ;
                oneTimeBendRad = x.next() ;
                rptdBendRad = x.next() ;
                installBendRad = x.next() ;
                statBendRad = x.next() ;
                dynBendRad = x.next() ;
                minFreq = x.next() ;
                maxFreq = x.next() ;
                counter++ ;
                
                
                if (cable.equals(searchTerm)){
                    found = true ;
                }
            }
            if (found){
                modNumTxt.setText(cable) ;
                manTxt.setText(manufacturer);
                rptdBendRadTxt.setText(rptdBendRad) ;
                inCondRadTxt.setText(inCondRad);
                oneTimeBendRadTxt.setText(oneTimeBendRad);
                outJackRadTxt.setText(jacket) ;
                installBendRadTxt.setText(installBendRad) ;
                dielectricTxt.setText(dielectric) ;
                shieldOC1Txt.setText(shieldOC1) ;
                shieldOC2Txt.setText(shieldOC2) ;
                jackTolerTxt.setText(jacketTolerance) ;
                statBendRadTxt.setText(statBendRad) ;
                dynBendRadTxt.setText(dynBendRad);
                minFreqTxt.setText(minFreq) ;
                maxFreqTxt.setText(maxFreq) ;
               jTextField1.setText(Integer.toString(counter)) ;
                
            }
        }
        catch(Exception e){
            
        }
        
        //jTextField1.setText(jComboBox1.getSelectedItem().toString());

        
    }//GEN-LAST:event_dropdownBoxActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_exitButtonActionPerformed

    private void frequencySliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_frequencySliderStateChanged
        // TODO add your handling code here:
       double freq = frequencySlider.getValue() ;
        String rowNumber = jTextField1.getText() ;
        double rowNum =0.0 ;
     if(rowNumber == null || rowNumber.isEmpty())
     {
         rowNum = 0.0;
     }
     else{
              rowNum = Double.parseDouble(rowNumber);
           }
     
       //int rowNum =0 ;
       //rowNum = Integer.parseInt(jTextField1.getText().trim()) ;
       double columnNum = 0.0 ;
       
       if (freq == 0){
           columnNum = 0 ;
       }if (freq==50){
           columnNum = 1;
       }if (freq>=100 && freq<=8000){
           columnNum = (int) ((freq/100)+1) ;
       }
    }//GEN-LAST:event_frequencySliderStateChanged
        
    private void cableSelectedTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cableSelectedTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cableSelectedTxtActionPerformed

    private void inputLengthTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputLengthTxtActionPerformed
        // TODO add your handling code here:
        //distanceGiven = inputLengthTxt.getText();
    }//GEN-LAST:event_inputLengthTxtActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(coaxCalc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(coaxCalc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(coaxCalc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(coaxCalc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and coaxCalc the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new coaxCalc().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cableSelectedTxt;
    private javax.swing.JPanel coaxCalcPanel;
    private javax.swing.JPanel coaxDataPanel;
    private javax.swing.JLabel dielectricLbl;
    private javax.swing.JTextField dielectricTxt;
    private javax.swing.JComboBox<String> dropdownBox;
    private javax.swing.JLabel dynBendRadLbl;
    private javax.swing.JTextField dynBendRadTxt;
    private javax.swing.JButton exitButton;
    private javax.swing.JTextField frequencySelectedTxt;
    private javax.swing.JSlider frequencySlider;
    private javax.swing.JLabel inCondRadLbl;
    private javax.swing.JTextField inCondRadTxt;
    private javax.swing.JTextField inputLengthTxt;
    private javax.swing.JLabel installBendRadLbl;
    private javax.swing.JTextField installBendRadTxt;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jackTolerTxt;
    private javax.swing.JLabel jacketToleranceLbl;
    private javax.swing.JLabel lengthInputLbl;
    private javax.swing.JTextField manTxt;
    private javax.swing.JLabel manuLbl;
    private javax.swing.JLabel maxFreqLbl;
    private javax.swing.JTextField maxFreqTxt;
    private javax.swing.JLabel minFreqLbl;
    private javax.swing.JTextField minFreqTxt;
    private javax.swing.JLabel mmLbl10;
    private javax.swing.JLabel mmLbl2;
    private javax.swing.JLabel mmLbl3;
    private javax.swing.JLabel mmLbl4;
    private javax.swing.JLabel mmLbl5;
    private javax.swing.JLabel mmLbl6;
    private javax.swing.JLabel mmLbl7;
    private javax.swing.JLabel mmLbl8;
    private javax.swing.JLabel mmLbl9;
    private javax.swing.JTextField modNumTxt;
    private javax.swing.JLabel modelNumLbl;
    private javax.swing.JLabel oTBendRadLbl;
    private javax.swing.JTextField oneTimeBendRadTxt;
    private javax.swing.JLabel outJackRadLbl;
    private javax.swing.JTextField outJackRadTxt;
    private javax.swing.JLabel rptdBendRadLbl;
    private javax.swing.JTextField rptdBendRadTxt;
    private javax.swing.JLabel shieldOC1Lbl;
    private javax.swing.JTextField shieldOC1Txt;
    private javax.swing.JLabel shieldOC2Lbl;
    private javax.swing.JTextField shieldOC2Txt;
    private javax.swing.JLabel statBendRadLbl;
    private javax.swing.JTextField statBendRadTxt;
    // End of variables declaration//GEN-END:variables
}
